/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package model

import (
	"github.com/apache/plc4x/plc4go/internal/spi/utils"
	"github.com/pkg/errors"
)

// Code generated by code-generation. DO NOT EDIT.

// BACnetEventParameterChangeOfValueCivCriteriaReferencedPropertyIncrement is the data-structure of this message
type BACnetEventParameterChangeOfValueCivCriteriaReferencedPropertyIncrement struct {
	*BACnetEventParameterChangeOfValueCivCriteria
	ReferencedPropertyIncrement *BACnetContextTagReal

	// Arguments.
	TagNumber uint8
}

// IBACnetEventParameterChangeOfValueCivCriteriaReferencedPropertyIncrement is the corresponding interface of BACnetEventParameterChangeOfValueCivCriteriaReferencedPropertyIncrement
type IBACnetEventParameterChangeOfValueCivCriteriaReferencedPropertyIncrement interface {
	IBACnetEventParameterChangeOfValueCivCriteria
	// GetReferencedPropertyIncrement returns ReferencedPropertyIncrement (property field)
	GetReferencedPropertyIncrement() *BACnetContextTagReal
	// GetLengthInBytes returns the length in bytes
	GetLengthInBytes() uint16
	// GetLengthInBits returns the length in bits
	GetLengthInBits() uint16
	// Serialize serializes this type
	Serialize(writeBuffer utils.WriteBuffer) error
}

///////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////
/////////////////////// Accessors for discriminator values.
///////////////////////

///////////////////////
///////////////////////
///////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////

func (m *BACnetEventParameterChangeOfValueCivCriteriaReferencedPropertyIncrement) InitializeParent(parent *BACnetEventParameterChangeOfValueCivCriteria, openingTag *BACnetOpeningTag, peekedTagHeader *BACnetTagHeader, closingTag *BACnetClosingTag) {
	m.BACnetEventParameterChangeOfValueCivCriteria.OpeningTag = openingTag
	m.BACnetEventParameterChangeOfValueCivCriteria.PeekedTagHeader = peekedTagHeader
	m.BACnetEventParameterChangeOfValueCivCriteria.ClosingTag = closingTag
}

func (m *BACnetEventParameterChangeOfValueCivCriteriaReferencedPropertyIncrement) GetParent() *BACnetEventParameterChangeOfValueCivCriteria {
	return m.BACnetEventParameterChangeOfValueCivCriteria
}

///////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////
/////////////////////// Accessors for property fields.
///////////////////////

func (m *BACnetEventParameterChangeOfValueCivCriteriaReferencedPropertyIncrement) GetReferencedPropertyIncrement() *BACnetContextTagReal {
	return m.ReferencedPropertyIncrement
}

///////////////////////
///////////////////////
///////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////

// NewBACnetEventParameterChangeOfValueCivCriteriaReferencedPropertyIncrement factory function for BACnetEventParameterChangeOfValueCivCriteriaReferencedPropertyIncrement
func NewBACnetEventParameterChangeOfValueCivCriteriaReferencedPropertyIncrement(referencedPropertyIncrement *BACnetContextTagReal, openingTag *BACnetOpeningTag, peekedTagHeader *BACnetTagHeader, closingTag *BACnetClosingTag, tagNumber uint8) *BACnetEventParameterChangeOfValueCivCriteriaReferencedPropertyIncrement {
	_result := &BACnetEventParameterChangeOfValueCivCriteriaReferencedPropertyIncrement{
		ReferencedPropertyIncrement:                  referencedPropertyIncrement,
		BACnetEventParameterChangeOfValueCivCriteria: NewBACnetEventParameterChangeOfValueCivCriteria(openingTag, peekedTagHeader, closingTag, tagNumber),
	}
	_result.Child = _result
	return _result
}

func CastBACnetEventParameterChangeOfValueCivCriteriaReferencedPropertyIncrement(structType interface{}) *BACnetEventParameterChangeOfValueCivCriteriaReferencedPropertyIncrement {
	if casted, ok := structType.(BACnetEventParameterChangeOfValueCivCriteriaReferencedPropertyIncrement); ok {
		return &casted
	}
	if casted, ok := structType.(*BACnetEventParameterChangeOfValueCivCriteriaReferencedPropertyIncrement); ok {
		return casted
	}
	if casted, ok := structType.(BACnetEventParameterChangeOfValueCivCriteria); ok {
		return CastBACnetEventParameterChangeOfValueCivCriteriaReferencedPropertyIncrement(casted.Child)
	}
	if casted, ok := structType.(*BACnetEventParameterChangeOfValueCivCriteria); ok {
		return CastBACnetEventParameterChangeOfValueCivCriteriaReferencedPropertyIncrement(casted.Child)
	}
	return nil
}

func (m *BACnetEventParameterChangeOfValueCivCriteriaReferencedPropertyIncrement) GetTypeName() string {
	return "BACnetEventParameterChangeOfValueCivCriteriaReferencedPropertyIncrement"
}

func (m *BACnetEventParameterChangeOfValueCivCriteriaReferencedPropertyIncrement) GetLengthInBits() uint16 {
	return m.GetLengthInBitsConditional(false)
}

func (m *BACnetEventParameterChangeOfValueCivCriteriaReferencedPropertyIncrement) GetLengthInBitsConditional(lastItem bool) uint16 {
	lengthInBits := uint16(m.GetParentLengthInBits())

	// Simple field (referencedPropertyIncrement)
	lengthInBits += m.ReferencedPropertyIncrement.GetLengthInBits()

	return lengthInBits
}

func (m *BACnetEventParameterChangeOfValueCivCriteriaReferencedPropertyIncrement) GetLengthInBytes() uint16 {
	return m.GetLengthInBits() / 8
}

func BACnetEventParameterChangeOfValueCivCriteriaReferencedPropertyIncrementParse(readBuffer utils.ReadBuffer, tagNumber uint8) (*BACnetEventParameterChangeOfValueCivCriteriaReferencedPropertyIncrement, error) {
	positionAware := readBuffer
	_ = positionAware
	if pullErr := readBuffer.PullContext("BACnetEventParameterChangeOfValueCivCriteriaReferencedPropertyIncrement"); pullErr != nil {
		return nil, pullErr
	}
	currentPos := positionAware.GetPos()
	_ = currentPos

	// Simple Field (referencedPropertyIncrement)
	if pullErr := readBuffer.PullContext("referencedPropertyIncrement"); pullErr != nil {
		return nil, pullErr
	}
	_referencedPropertyIncrement, _referencedPropertyIncrementErr := BACnetContextTagParse(readBuffer, uint8(uint8(1)), BACnetDataType(BACnetDataType_REAL))
	if _referencedPropertyIncrementErr != nil {
		return nil, errors.Wrap(_referencedPropertyIncrementErr, "Error parsing 'referencedPropertyIncrement' field")
	}
	referencedPropertyIncrement := CastBACnetContextTagReal(_referencedPropertyIncrement)
	if closeErr := readBuffer.CloseContext("referencedPropertyIncrement"); closeErr != nil {
		return nil, closeErr
	}

	if closeErr := readBuffer.CloseContext("BACnetEventParameterChangeOfValueCivCriteriaReferencedPropertyIncrement"); closeErr != nil {
		return nil, closeErr
	}

	// Create a partially initialized instance
	_child := &BACnetEventParameterChangeOfValueCivCriteriaReferencedPropertyIncrement{
		ReferencedPropertyIncrement:                  CastBACnetContextTagReal(referencedPropertyIncrement),
		BACnetEventParameterChangeOfValueCivCriteria: &BACnetEventParameterChangeOfValueCivCriteria{},
	}
	_child.BACnetEventParameterChangeOfValueCivCriteria.Child = _child
	return _child, nil
}

func (m *BACnetEventParameterChangeOfValueCivCriteriaReferencedPropertyIncrement) Serialize(writeBuffer utils.WriteBuffer) error {
	positionAware := writeBuffer
	_ = positionAware
	ser := func() error {
		if pushErr := writeBuffer.PushContext("BACnetEventParameterChangeOfValueCivCriteriaReferencedPropertyIncrement"); pushErr != nil {
			return pushErr
		}

		// Simple Field (referencedPropertyIncrement)
		if pushErr := writeBuffer.PushContext("referencedPropertyIncrement"); pushErr != nil {
			return pushErr
		}
		_referencedPropertyIncrementErr := m.ReferencedPropertyIncrement.Serialize(writeBuffer)
		if popErr := writeBuffer.PopContext("referencedPropertyIncrement"); popErr != nil {
			return popErr
		}
		if _referencedPropertyIncrementErr != nil {
			return errors.Wrap(_referencedPropertyIncrementErr, "Error serializing 'referencedPropertyIncrement' field")
		}

		if popErr := writeBuffer.PopContext("BACnetEventParameterChangeOfValueCivCriteriaReferencedPropertyIncrement"); popErr != nil {
			return popErr
		}
		return nil
	}
	return m.SerializeParent(writeBuffer, m, ser)
}

func (m *BACnetEventParameterChangeOfValueCivCriteriaReferencedPropertyIncrement) String() string {
	if m == nil {
		return "<nil>"
	}
	buffer := utils.NewBoxedWriteBufferWithOptions(true, true)
	if err := m.Serialize(buffer); err != nil {
		return err.Error()
	}
	return buffer.GetBox().String()
}
