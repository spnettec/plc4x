/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package model

import (
	"github.com/apache/plc4x/plc4go/internal/spi/utils"
	"github.com/pkg/errors"
)

// Code generated by code-generation. DO NOT EDIT.

// BACnetUnconfirmedServiceChoice is an enum
type BACnetUnconfirmedServiceChoice uint8

type IBACnetUnconfirmedServiceChoice interface {
	Serialize(writeBuffer utils.WriteBuffer) error
}

const (
	BACnetUnconfirmedServiceChoice_I_AM                                  BACnetUnconfirmedServiceChoice = 0x00
	BACnetUnconfirmedServiceChoice_I_HAVE                                BACnetUnconfirmedServiceChoice = 0x01
	BACnetUnconfirmedServiceChoice_UNCONFIRMED_COV_NOTIFICATION          BACnetUnconfirmedServiceChoice = 0x02
	BACnetUnconfirmedServiceChoice_UNCONFIRMED_EVENT_NOTIFICATION        BACnetUnconfirmedServiceChoice = 0x03
	BACnetUnconfirmedServiceChoice_UNCONFIRMED_PRIVATE_TRANSFER          BACnetUnconfirmedServiceChoice = 0x04
	BACnetUnconfirmedServiceChoice_UNCONFIRMED_TEXT_MESSAGE              BACnetUnconfirmedServiceChoice = 0x05
	BACnetUnconfirmedServiceChoice_TIME_SYNCHRONIZATION                  BACnetUnconfirmedServiceChoice = 0x06
	BACnetUnconfirmedServiceChoice_WHO_HAS                               BACnetUnconfirmedServiceChoice = 0x07
	BACnetUnconfirmedServiceChoice_WHO_IS                                BACnetUnconfirmedServiceChoice = 0x08
	BACnetUnconfirmedServiceChoice_UTC_TIME_SYNCHRONIZATION              BACnetUnconfirmedServiceChoice = 0x09
	BACnetUnconfirmedServiceChoice_WRITE_GROUP                           BACnetUnconfirmedServiceChoice = 0x0A
	BACnetUnconfirmedServiceChoice_UNCONFIRMED_COV_NOTIFICATION_MULTIPLE BACnetUnconfirmedServiceChoice = 0x0B
)

var BACnetUnconfirmedServiceChoiceValues []BACnetUnconfirmedServiceChoice

func init() {
	_ = errors.New
	BACnetUnconfirmedServiceChoiceValues = []BACnetUnconfirmedServiceChoice{
		BACnetUnconfirmedServiceChoice_I_AM,
		BACnetUnconfirmedServiceChoice_I_HAVE,
		BACnetUnconfirmedServiceChoice_UNCONFIRMED_COV_NOTIFICATION,
		BACnetUnconfirmedServiceChoice_UNCONFIRMED_EVENT_NOTIFICATION,
		BACnetUnconfirmedServiceChoice_UNCONFIRMED_PRIVATE_TRANSFER,
		BACnetUnconfirmedServiceChoice_UNCONFIRMED_TEXT_MESSAGE,
		BACnetUnconfirmedServiceChoice_TIME_SYNCHRONIZATION,
		BACnetUnconfirmedServiceChoice_WHO_HAS,
		BACnetUnconfirmedServiceChoice_WHO_IS,
		BACnetUnconfirmedServiceChoice_UTC_TIME_SYNCHRONIZATION,
		BACnetUnconfirmedServiceChoice_WRITE_GROUP,
		BACnetUnconfirmedServiceChoice_UNCONFIRMED_COV_NOTIFICATION_MULTIPLE,
	}
}

func BACnetUnconfirmedServiceChoiceByValue(value uint8) BACnetUnconfirmedServiceChoice {
	switch value {
	case 0x00:
		return BACnetUnconfirmedServiceChoice_I_AM
	case 0x01:
		return BACnetUnconfirmedServiceChoice_I_HAVE
	case 0x02:
		return BACnetUnconfirmedServiceChoice_UNCONFIRMED_COV_NOTIFICATION
	case 0x03:
		return BACnetUnconfirmedServiceChoice_UNCONFIRMED_EVENT_NOTIFICATION
	case 0x04:
		return BACnetUnconfirmedServiceChoice_UNCONFIRMED_PRIVATE_TRANSFER
	case 0x05:
		return BACnetUnconfirmedServiceChoice_UNCONFIRMED_TEXT_MESSAGE
	case 0x06:
		return BACnetUnconfirmedServiceChoice_TIME_SYNCHRONIZATION
	case 0x07:
		return BACnetUnconfirmedServiceChoice_WHO_HAS
	case 0x08:
		return BACnetUnconfirmedServiceChoice_WHO_IS
	case 0x09:
		return BACnetUnconfirmedServiceChoice_UTC_TIME_SYNCHRONIZATION
	case 0x0A:
		return BACnetUnconfirmedServiceChoice_WRITE_GROUP
	case 0x0B:
		return BACnetUnconfirmedServiceChoice_UNCONFIRMED_COV_NOTIFICATION_MULTIPLE
	}
	return 0
}

func BACnetUnconfirmedServiceChoiceByName(value string) (enum BACnetUnconfirmedServiceChoice, ok bool) {
	ok = true
	switch value {
	case "I_AM":
		enum = BACnetUnconfirmedServiceChoice_I_AM
	case "I_HAVE":
		enum = BACnetUnconfirmedServiceChoice_I_HAVE
	case "UNCONFIRMED_COV_NOTIFICATION":
		enum = BACnetUnconfirmedServiceChoice_UNCONFIRMED_COV_NOTIFICATION
	case "UNCONFIRMED_EVENT_NOTIFICATION":
		enum = BACnetUnconfirmedServiceChoice_UNCONFIRMED_EVENT_NOTIFICATION
	case "UNCONFIRMED_PRIVATE_TRANSFER":
		enum = BACnetUnconfirmedServiceChoice_UNCONFIRMED_PRIVATE_TRANSFER
	case "UNCONFIRMED_TEXT_MESSAGE":
		enum = BACnetUnconfirmedServiceChoice_UNCONFIRMED_TEXT_MESSAGE
	case "TIME_SYNCHRONIZATION":
		enum = BACnetUnconfirmedServiceChoice_TIME_SYNCHRONIZATION
	case "WHO_HAS":
		enum = BACnetUnconfirmedServiceChoice_WHO_HAS
	case "WHO_IS":
		enum = BACnetUnconfirmedServiceChoice_WHO_IS
	case "UTC_TIME_SYNCHRONIZATION":
		enum = BACnetUnconfirmedServiceChoice_UTC_TIME_SYNCHRONIZATION
	case "WRITE_GROUP":
		enum = BACnetUnconfirmedServiceChoice_WRITE_GROUP
	case "UNCONFIRMED_COV_NOTIFICATION_MULTIPLE":
		enum = BACnetUnconfirmedServiceChoice_UNCONFIRMED_COV_NOTIFICATION_MULTIPLE
	default:
		enum = 0
		ok = false
	}
	return
}

func BACnetUnconfirmedServiceChoiceKnows(value uint8) bool {
	for _, typeValue := range BACnetUnconfirmedServiceChoiceValues {
		if uint8(typeValue) == value {
			return true
		}
	}
	return false
}

func CastBACnetUnconfirmedServiceChoice(structType interface{}) BACnetUnconfirmedServiceChoice {
	castFunc := func(typ interface{}) BACnetUnconfirmedServiceChoice {
		if sBACnetUnconfirmedServiceChoice, ok := typ.(BACnetUnconfirmedServiceChoice); ok {
			return sBACnetUnconfirmedServiceChoice
		}
		return 0
	}
	return castFunc(structType)
}

func (m BACnetUnconfirmedServiceChoice) GetLengthInBits() uint16 {
	return 8
}

func (m BACnetUnconfirmedServiceChoice) GetLengthInBytes() uint16 {
	return m.GetLengthInBits() / 8
}

func BACnetUnconfirmedServiceChoiceParse(readBuffer utils.ReadBuffer) (BACnetUnconfirmedServiceChoice, error) {
	val, err := readBuffer.ReadUint8("BACnetUnconfirmedServiceChoice", 8)
	if err != nil {
		return 0, nil
	}
	return BACnetUnconfirmedServiceChoiceByValue(val), nil
}

func (e BACnetUnconfirmedServiceChoice) Serialize(writeBuffer utils.WriteBuffer) error {
	return writeBuffer.WriteUint8("BACnetUnconfirmedServiceChoice", 8, uint8(e), utils.WithAdditionalStringRepresentation(e.PLC4XEnumName()))
}

// PLC4XEnumName returns the name that is used in code to identify this enum
func (e BACnetUnconfirmedServiceChoice) PLC4XEnumName() string {
	switch e {
	case BACnetUnconfirmedServiceChoice_I_AM:
		return "I_AM"
	case BACnetUnconfirmedServiceChoice_I_HAVE:
		return "I_HAVE"
	case BACnetUnconfirmedServiceChoice_UNCONFIRMED_COV_NOTIFICATION:
		return "UNCONFIRMED_COV_NOTIFICATION"
	case BACnetUnconfirmedServiceChoice_UNCONFIRMED_EVENT_NOTIFICATION:
		return "UNCONFIRMED_EVENT_NOTIFICATION"
	case BACnetUnconfirmedServiceChoice_UNCONFIRMED_PRIVATE_TRANSFER:
		return "UNCONFIRMED_PRIVATE_TRANSFER"
	case BACnetUnconfirmedServiceChoice_UNCONFIRMED_TEXT_MESSAGE:
		return "UNCONFIRMED_TEXT_MESSAGE"
	case BACnetUnconfirmedServiceChoice_TIME_SYNCHRONIZATION:
		return "TIME_SYNCHRONIZATION"
	case BACnetUnconfirmedServiceChoice_WHO_HAS:
		return "WHO_HAS"
	case BACnetUnconfirmedServiceChoice_WHO_IS:
		return "WHO_IS"
	case BACnetUnconfirmedServiceChoice_UTC_TIME_SYNCHRONIZATION:
		return "UTC_TIME_SYNCHRONIZATION"
	case BACnetUnconfirmedServiceChoice_WRITE_GROUP:
		return "WRITE_GROUP"
	case BACnetUnconfirmedServiceChoice_UNCONFIRMED_COV_NOTIFICATION_MULTIPLE:
		return "UNCONFIRMED_COV_NOTIFICATION_MULTIPLE"
	}
	return ""
}

func (e BACnetUnconfirmedServiceChoice) String() string {
	return e.PLC4XEnumName()
}
