/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package model

import (
	"github.com/apache/plc4x/plc4go/internal/spi/utils"
	"github.com/pkg/errors"
	"github.com/rs/zerolog/log"
	"io"
)

// Code generated by code-generation. DO NOT EDIT.

// BACnetConfirmedServiceRequestLifeSafetyOperation is the data-structure of this message
type BACnetConfirmedServiceRequestLifeSafetyOperation struct {
	*BACnetConfirmedServiceRequest
	RequestingProcessIdentifier *BACnetContextTagUnsignedInteger
	RequestingSource            *BACnetContextTagCharacterString
	Request                     *BACnetLifeSafetyOperationTagged
	ObjectIdentifier            *BACnetContextTagObjectIdentifier

	// Arguments.
	ServiceRequestLength uint16
}

// IBACnetConfirmedServiceRequestLifeSafetyOperation is the corresponding interface of BACnetConfirmedServiceRequestLifeSafetyOperation
type IBACnetConfirmedServiceRequestLifeSafetyOperation interface {
	IBACnetConfirmedServiceRequest
	// GetRequestingProcessIdentifier returns RequestingProcessIdentifier (property field)
	GetRequestingProcessIdentifier() *BACnetContextTagUnsignedInteger
	// GetRequestingSource returns RequestingSource (property field)
	GetRequestingSource() *BACnetContextTagCharacterString
	// GetRequest returns Request (property field)
	GetRequest() *BACnetLifeSafetyOperationTagged
	// GetObjectIdentifier returns ObjectIdentifier (property field)
	GetObjectIdentifier() *BACnetContextTagObjectIdentifier
	// GetLengthInBytes returns the length in bytes
	GetLengthInBytes() uint16
	// GetLengthInBits returns the length in bits
	GetLengthInBits() uint16
	// Serialize serializes this type
	Serialize(writeBuffer utils.WriteBuffer) error
}

///////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////
/////////////////////// Accessors for discriminator values.
///////////////////////

func (m *BACnetConfirmedServiceRequestLifeSafetyOperation) GetServiceChoice() BACnetConfirmedServiceChoice {
	return BACnetConfirmedServiceChoice_LIFE_SAFETY_OPERATION
}

///////////////////////
///////////////////////
///////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////

func (m *BACnetConfirmedServiceRequestLifeSafetyOperation) InitializeParent(parent *BACnetConfirmedServiceRequest) {
}

func (m *BACnetConfirmedServiceRequestLifeSafetyOperation) GetParent() *BACnetConfirmedServiceRequest {
	return m.BACnetConfirmedServiceRequest
}

///////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////
/////////////////////// Accessors for property fields.
///////////////////////

func (m *BACnetConfirmedServiceRequestLifeSafetyOperation) GetRequestingProcessIdentifier() *BACnetContextTagUnsignedInteger {
	return m.RequestingProcessIdentifier
}

func (m *BACnetConfirmedServiceRequestLifeSafetyOperation) GetRequestingSource() *BACnetContextTagCharacterString {
	return m.RequestingSource
}

func (m *BACnetConfirmedServiceRequestLifeSafetyOperation) GetRequest() *BACnetLifeSafetyOperationTagged {
	return m.Request
}

func (m *BACnetConfirmedServiceRequestLifeSafetyOperation) GetObjectIdentifier() *BACnetContextTagObjectIdentifier {
	return m.ObjectIdentifier
}

///////////////////////
///////////////////////
///////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////

// NewBACnetConfirmedServiceRequestLifeSafetyOperation factory function for BACnetConfirmedServiceRequestLifeSafetyOperation
func NewBACnetConfirmedServiceRequestLifeSafetyOperation(requestingProcessIdentifier *BACnetContextTagUnsignedInteger, requestingSource *BACnetContextTagCharacterString, request *BACnetLifeSafetyOperationTagged, objectIdentifier *BACnetContextTagObjectIdentifier, serviceRequestLength uint16) *BACnetConfirmedServiceRequestLifeSafetyOperation {
	_result := &BACnetConfirmedServiceRequestLifeSafetyOperation{
		RequestingProcessIdentifier:   requestingProcessIdentifier,
		RequestingSource:              requestingSource,
		Request:                       request,
		ObjectIdentifier:              objectIdentifier,
		BACnetConfirmedServiceRequest: NewBACnetConfirmedServiceRequest(serviceRequestLength),
	}
	_result.Child = _result
	return _result
}

func CastBACnetConfirmedServiceRequestLifeSafetyOperation(structType interface{}) *BACnetConfirmedServiceRequestLifeSafetyOperation {
	if casted, ok := structType.(BACnetConfirmedServiceRequestLifeSafetyOperation); ok {
		return &casted
	}
	if casted, ok := structType.(*BACnetConfirmedServiceRequestLifeSafetyOperation); ok {
		return casted
	}
	if casted, ok := structType.(BACnetConfirmedServiceRequest); ok {
		return CastBACnetConfirmedServiceRequestLifeSafetyOperation(casted.Child)
	}
	if casted, ok := structType.(*BACnetConfirmedServiceRequest); ok {
		return CastBACnetConfirmedServiceRequestLifeSafetyOperation(casted.Child)
	}
	return nil
}

func (m *BACnetConfirmedServiceRequestLifeSafetyOperation) GetTypeName() string {
	return "BACnetConfirmedServiceRequestLifeSafetyOperation"
}

func (m *BACnetConfirmedServiceRequestLifeSafetyOperation) GetLengthInBits() uint16 {
	return m.GetLengthInBitsConditional(false)
}

func (m *BACnetConfirmedServiceRequestLifeSafetyOperation) GetLengthInBitsConditional(lastItem bool) uint16 {
	lengthInBits := uint16(m.GetParentLengthInBits())

	// Simple field (requestingProcessIdentifier)
	lengthInBits += m.RequestingProcessIdentifier.GetLengthInBits()

	// Simple field (requestingSource)
	lengthInBits += m.RequestingSource.GetLengthInBits()

	// Simple field (request)
	lengthInBits += m.Request.GetLengthInBits()

	// Optional Field (objectIdentifier)
	if m.ObjectIdentifier != nil {
		lengthInBits += (*m.ObjectIdentifier).GetLengthInBits()
	}

	return lengthInBits
}

func (m *BACnetConfirmedServiceRequestLifeSafetyOperation) GetLengthInBytes() uint16 {
	return m.GetLengthInBits() / 8
}

func BACnetConfirmedServiceRequestLifeSafetyOperationParse(readBuffer utils.ReadBuffer, serviceRequestLength uint16) (*BACnetConfirmedServiceRequestLifeSafetyOperation, error) {
	positionAware := readBuffer
	_ = positionAware
	if pullErr := readBuffer.PullContext("BACnetConfirmedServiceRequestLifeSafetyOperation"); pullErr != nil {
		return nil, pullErr
	}
	currentPos := positionAware.GetPos()
	_ = currentPos

	// Simple Field (requestingProcessIdentifier)
	if pullErr := readBuffer.PullContext("requestingProcessIdentifier"); pullErr != nil {
		return nil, pullErr
	}
	_requestingProcessIdentifier, _requestingProcessIdentifierErr := BACnetContextTagParse(readBuffer, uint8(uint8(0)), BACnetDataType(BACnetDataType_UNSIGNED_INTEGER))
	if _requestingProcessIdentifierErr != nil {
		return nil, errors.Wrap(_requestingProcessIdentifierErr, "Error parsing 'requestingProcessIdentifier' field")
	}
	requestingProcessIdentifier := CastBACnetContextTagUnsignedInteger(_requestingProcessIdentifier)
	if closeErr := readBuffer.CloseContext("requestingProcessIdentifier"); closeErr != nil {
		return nil, closeErr
	}

	// Simple Field (requestingSource)
	if pullErr := readBuffer.PullContext("requestingSource"); pullErr != nil {
		return nil, pullErr
	}
	_requestingSource, _requestingSourceErr := BACnetContextTagParse(readBuffer, uint8(uint8(1)), BACnetDataType(BACnetDataType_CHARACTER_STRING))
	if _requestingSourceErr != nil {
		return nil, errors.Wrap(_requestingSourceErr, "Error parsing 'requestingSource' field")
	}
	requestingSource := CastBACnetContextTagCharacterString(_requestingSource)
	if closeErr := readBuffer.CloseContext("requestingSource"); closeErr != nil {
		return nil, closeErr
	}

	// Simple Field (request)
	if pullErr := readBuffer.PullContext("request"); pullErr != nil {
		return nil, pullErr
	}
	_request, _requestErr := BACnetLifeSafetyOperationTaggedParse(readBuffer, uint8(uint8(2)), TagClass(TagClass_CONTEXT_SPECIFIC_TAGS))
	if _requestErr != nil {
		return nil, errors.Wrap(_requestErr, "Error parsing 'request' field")
	}
	request := CastBACnetLifeSafetyOperationTagged(_request)
	if closeErr := readBuffer.CloseContext("request"); closeErr != nil {
		return nil, closeErr
	}

	// Optional Field (objectIdentifier) (Can be skipped, if a given expression evaluates to false)
	var objectIdentifier *BACnetContextTagObjectIdentifier = nil
	{
		currentPos = positionAware.GetPos()
		if pullErr := readBuffer.PullContext("objectIdentifier"); pullErr != nil {
			return nil, pullErr
		}
		_val, _err := BACnetContextTagParse(readBuffer, uint8(3), BACnetDataType_BACNET_OBJECT_IDENTIFIER)
		switch {
		case errors.Is(_err, utils.ParseAssertError{}) || errors.Is(_err, io.EOF):
			log.Debug().Err(_err).Msg("Resetting position because optional threw an error")
			readBuffer.Reset(currentPos)
		case _err != nil:
			return nil, errors.Wrap(_err, "Error parsing 'objectIdentifier' field")
		default:
			objectIdentifier = CastBACnetContextTagObjectIdentifier(_val)
			if closeErr := readBuffer.CloseContext("objectIdentifier"); closeErr != nil {
				return nil, closeErr
			}
		}
	}

	if closeErr := readBuffer.CloseContext("BACnetConfirmedServiceRequestLifeSafetyOperation"); closeErr != nil {
		return nil, closeErr
	}

	// Create a partially initialized instance
	_child := &BACnetConfirmedServiceRequestLifeSafetyOperation{
		RequestingProcessIdentifier:   CastBACnetContextTagUnsignedInteger(requestingProcessIdentifier),
		RequestingSource:              CastBACnetContextTagCharacterString(requestingSource),
		Request:                       CastBACnetLifeSafetyOperationTagged(request),
		ObjectIdentifier:              CastBACnetContextTagObjectIdentifier(objectIdentifier),
		BACnetConfirmedServiceRequest: &BACnetConfirmedServiceRequest{},
	}
	_child.BACnetConfirmedServiceRequest.Child = _child
	return _child, nil
}

func (m *BACnetConfirmedServiceRequestLifeSafetyOperation) Serialize(writeBuffer utils.WriteBuffer) error {
	positionAware := writeBuffer
	_ = positionAware
	ser := func() error {
		if pushErr := writeBuffer.PushContext("BACnetConfirmedServiceRequestLifeSafetyOperation"); pushErr != nil {
			return pushErr
		}

		// Simple Field (requestingProcessIdentifier)
		if pushErr := writeBuffer.PushContext("requestingProcessIdentifier"); pushErr != nil {
			return pushErr
		}
		_requestingProcessIdentifierErr := m.RequestingProcessIdentifier.Serialize(writeBuffer)
		if popErr := writeBuffer.PopContext("requestingProcessIdentifier"); popErr != nil {
			return popErr
		}
		if _requestingProcessIdentifierErr != nil {
			return errors.Wrap(_requestingProcessIdentifierErr, "Error serializing 'requestingProcessIdentifier' field")
		}

		// Simple Field (requestingSource)
		if pushErr := writeBuffer.PushContext("requestingSource"); pushErr != nil {
			return pushErr
		}
		_requestingSourceErr := m.RequestingSource.Serialize(writeBuffer)
		if popErr := writeBuffer.PopContext("requestingSource"); popErr != nil {
			return popErr
		}
		if _requestingSourceErr != nil {
			return errors.Wrap(_requestingSourceErr, "Error serializing 'requestingSource' field")
		}

		// Simple Field (request)
		if pushErr := writeBuffer.PushContext("request"); pushErr != nil {
			return pushErr
		}
		_requestErr := m.Request.Serialize(writeBuffer)
		if popErr := writeBuffer.PopContext("request"); popErr != nil {
			return popErr
		}
		if _requestErr != nil {
			return errors.Wrap(_requestErr, "Error serializing 'request' field")
		}

		// Optional Field (objectIdentifier) (Can be skipped, if the value is null)
		var objectIdentifier *BACnetContextTagObjectIdentifier = nil
		if m.ObjectIdentifier != nil {
			if pushErr := writeBuffer.PushContext("objectIdentifier"); pushErr != nil {
				return pushErr
			}
			objectIdentifier = m.ObjectIdentifier
			_objectIdentifierErr := objectIdentifier.Serialize(writeBuffer)
			if popErr := writeBuffer.PopContext("objectIdentifier"); popErr != nil {
				return popErr
			}
			if _objectIdentifierErr != nil {
				return errors.Wrap(_objectIdentifierErr, "Error serializing 'objectIdentifier' field")
			}
		}

		if popErr := writeBuffer.PopContext("BACnetConfirmedServiceRequestLifeSafetyOperation"); popErr != nil {
			return popErr
		}
		return nil
	}
	return m.SerializeParent(writeBuffer, m, ser)
}

func (m *BACnetConfirmedServiceRequestLifeSafetyOperation) String() string {
	if m == nil {
		return "<nil>"
	}
	buffer := utils.NewBoxedWriteBufferWithOptions(true, true)
	if err := m.Serialize(buffer); err != nil {
		return err.Error()
	}
	return buffer.GetBox().String()
}
